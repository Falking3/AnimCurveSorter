import bpy

root_bones = []
for bone in bpy.context.active_object.pose.bones:
    if bone.parent == None:
        root_bones.append(bone)
        
ordered_bones = []
for bone in root_bones:
    ordered_bones.append(bone)


print("\n----------------------------------------------------------------")
for bone in root_bones:
    path_finished = False
    current_bone = bone
        
    while path_finished == False:
        print("\n\n Cycle start: current_bone", current_bone.name)

        valid_child_found = False
        print(current_bone.children)
        for child in current_bone.children:
            if child not in ordered_bones:
                ordered_bones.append(child)                
            #print("child = ", child.name)
            if len(child.children)>0:
                print("bone", child.name, "passed length check")
                if child.children[0] not in ordered_bones:
                    print(child.children[0], "not in orderd_bones")
                    current_bone = child
                    valid_child_found = True
                    print("Contents of ordered bones:", ordered_bones)
                    print("New bone:", current_bone.name)
                    break
        
        if valid_child_found == False:
            if current_bone.parent == None:
                path_finished = True
                break
            else:
                print("Moving back up to", current_bone.parent.name)
                current_bone = current_bone.parent

for bone in ordered_bones:
    print(bone.name)       
      
        
#        
#add all children
#pick first child and check children (until children found)
#if children present and not in array set first child as active bone, continue
#else, move back to parent, check for new children

#add all children
#pick fi